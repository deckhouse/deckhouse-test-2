name: Run automatic cherry-pick on backport PRs

on:
  pull_request:
    types:
      - closed
      - labeled
    branches:
      - main
  issue_comment:
    types:
      - created

jobs:
  detect-pr-by-label:
    concurrency: source_pr
    if: ${{ github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.event.pull_request.milestone != null && contains(github.event.pull_request.labels.*.name, 'status/backport')  }}
    runs-on: ubuntu-latest
    outputs:
      release-branch: ${{ steps.from-milestone.outputs.branch }}
      commit: ${{ steps.from-milestone.outputs.commit }}
      pr-number: ${{ github.event.pull_request.number }}
    steps:
      - name: Get Release branch from milestone
        id: from-milestone
        env:
          MILESTONE: ${{ github.event.pull_request.milestone.title }}
          HEAD_PR_SHA: ${{ github.event.pull_request.head.sha }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          releaseBranch="release-$(echo ${MILESTONE} | sed -nre 's/v([0-9]+\.[0-9]+)\.[0-9]+/\1/p')"
          echo "::set-output name=branch::${releaseBranch}"
          echo "::set-output name=commit::${GITHUB_SHA}"

  detect-pr-by-comment:
    concurrency: source_pr
    if: ${{ github.event_name == 'issue_comment' && github.event.action == 'created' && github.event.issue.state == 'closed' && github.event.pull_request.user.login != 'deckhouse-BOaTswain' && !contains(github.event.issue.labels.*.name, 'issue/release') }}
    runs-on: ubuntu-latest
    outputs:
      release-branch: ${{ steps.comment-info.outputs.branch }}
      commit: ${{ steps.pr-info.outputs.commit }}
      pr-number: ${{ github.event.issue.number }}
    steps:
      - uses: actions-ecosystem/action-regex-match@v2
        id: regexp-match
        with:
          text: ${{ github.event.comment.body }}
          regex: '^/backport\sv?(\d+\.\d+)$' # /backport 1.34 or /backport v1.34
      - name: Get comment info
        id: comment-info
        if: ${{ steps.regexp-match.outputs.match != null }}
        env:
          COMMENT_BODY: ${{ github.event.comment.body }}
        run: |
          releaseBranch="release-$(echo ${COMMENT_BODY} | awk '{print $2}' | sed 's/v//')"
          echo "::set-output name=branch::${releaseBranch}"
      - name: Get PR info
        id: pr-info
        if: ${{ steps.regexp-match.outputs.match != null }}
        uses: actions/github-script@v6
        with:
          script: |
            const response = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ github.event.issue.number }}
            })
            core.setOutput('commit', response.data.merge_commit_sha)

  backport-to-release-branch:
    runs-on: ubuntu-latest
    needs: [detect-pr-by-label, detect-pr-by-comment]
    if: always() && (needs.detect-pr-by-label.outputs.release-branch || needs.detect-pr-by-comment.outputs.release-branch)
    steps:
      - name: Detect source
        id: prepare
        run: |
          releaseBranch=${{needs.detect-pr-by-label.outputs.release-branch}}
          commit=${{needs.detect-pr-by-label.outputs.commit}}
          prNumber=${{needs.detect-pr-by-label.outputs.pr-number}}
          if [ -z $releaseBranch ]; then
            releaseBranch=${{needs.detect-pr-by-comment.outputs.release-branch}}
            commit=${{needs.detect-pr-by-comment.outputs.commit}}
            prNumber=${{needs.detect-pr-by-comment.outputs.pr-number}}
          fi
          echo "::set-output name=release-branch::${releaseBranch}"
          echo "::set-output name=commit::${commit}"
          echo "::set-output name=pr-number::${prNumber}"
      - name: Check release branch exists
        id: check_target_branch
        uses: actions/github-script@v6
        env:
          RELEASE_BRANCH: ${{ steps.prepare.outputs.release-branch }}
        with:
          script: |
            const response = await github.rest.git.getRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'heads/' + process.env.RELEASE_BRANCH
            })
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cherry-pick
        id: cherry-pick-pr
        uses: deckhouse/backport-action@v1.0.0
        env:
          RELEASE_BRANCH: ${{ steps.prepare.outputs.release-branch }}
          GITHUB_SHA: ${{ steps.prepare.outputs.commit }}
        with:
          token: ${{ secrets.BOATSWAIN_GITHUB_TOKEN }}
          committer: "deckhouse-BOaTswain <89150800+deckhouse-boatswain@users.noreply.github.com>"
          branch: ${{ env.RELEASE_BRANCH }}
          labels: auto,backported
          automerge: true
          mergeMethod: squash
      - name: Add successful comment
        if: steps.cherry-pick-pr.conclusion == 'success'
        env:
          release-branch: ${{ steps.prepare.outputs.release-branch }}
          cherry-pr-number: ${{ steps.cherry-pick-pr.outputs.cherry-pr-number }}
          cherry-pr-url: ${{ steps.cherry-pick-pr.outputs.cherry-pr-url }}
        uses: peter-evans/create-or-update-comment@v2
        with:
          token: ${{ secrets.BOATSWAIN_GITHUB_TOKEN }}
          issue-number: ${{ steps.prepare.outputs.pr-number }}
          reactions: hooray
          body: "Cherry pick PR [${{ env.cherry-pr-number }}](${{ env.cherry-pr-url }}) to the branch [${{ env.release_branch }}](https://github.com/${{github.repository}}/tree/${{ env.release_branch }}) successful!"
      - name: Remove backport label
        if: steps.cherry-pick-pr.conclusion == 'success'
        uses: actions-ecosystem/action-remove-labels@v1
        with:
          github_token: ${{ secrets.BOATSWAIN_GITHUB_TOKEN }}
          number: ${{ steps.prepare.outputs.pr-number }}
          labels: "status/backport"
      - name: Add error comment
        if: ${{ failure() && (steps.cherry-pick-pr.conclusion == 'failure' || steps.check_target_branch.conclusion == 'failure') }}
        uses: peter-evans/create-or-update-comment@v2
        env:
          error-message: ${{ steps.cherry-pick-pr.outputs.error-message }}
          common-error: ${{ format('Backport failed. See [Job]({1}/{2}/actions/runs/{3}) for details.', github.server_url, github.repository, github.run_id) }}
        with:
          token: ${{ secrets.BOATSWAIN_GITHUB_TOKEN }}
          issue-number: ${{ steps.prepare.outputs.pr-number }}
          reactions: 'confused'
          body: ${{ env.error-message || env.common-error }}

#  backport-to-release-branch:
#    if: ${{ github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'status/backport') && github.event.pull_request.milestone != null }}
#    runs-on: ubuntu-latest
#    steps:
#      - name: Get backport info
#        env:
#          MILESTONE: ${{ github.event.pull_request.milestone.title }}
#          HEAD_PR_SHA: ${{ github.event.pull_request.head.sha }}
#        run: |
#          echo "last_commit=${GITHUB_SHA}" >> $GITHUB_ENV
#          releaseBranch="release-$(echo ${MILESTONE} | sed -nre 's/v([0-9]+\.[0-9]+)\.[0-9]+/\1/p')"
#          echo "release_branch=${releaseBranch}" >> $GITHUB_ENV
#
#          echo "Create cherry-pick to $releaseBranch of commit: ${GITHUB_SHA}"
#      - name: Checkout
#        uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#      - name: Cherry-pick
#        id: cherry-pick-pr
#        uses: deckhouse/backport-action@v1.0.0
#        with:
#          token: ${{ secrets.BOATSWAIN_GITHUB_TOKEN }}
#          committer: "deckhouse-BOaTswain <89150800+deckhouse-boatswain@users.noreply.github.com>"
#          branch: ${{ env.release_branch }}
#          labels: auto,backported
#          automerge: true
#          mergeMethod: squash
#      - name: Add successful comment
#        if: steps.cherry-pick-pr.conclusion == 'success'
#        uses: peter-evans/create-or-update-comment@v2
#        with:
#          token: ${{ secrets.BOATSWAIN_GITHUB_TOKEN }}
#          issue-number: ${{ github.event.pull_request.number }}
#          reactions: hooray
#          body: "Cherry pick PR [${{ steps.cherry-pick-pr.outputs.cherry-pr-number }}](${{ steps.cherry-pick-pr.outputs.cherry-pr-url }}) to the branch [${{ env.release_branch }}](https://github.com/${{github.repository}}/tree/${{ env.release_branch }}) successful!"
#      - name: Remove backport label
#        if: steps.cherry-pick-pr.conclusion == 'success'
#        uses: actions-ecosystem/action-remove-labels@v1
#        with:
#          github_token: ${{ secrets.BOATSWAIN_GITHUB_TOKEN }}
#          labels: "status/backport"
#      - name: Add error comment
#        if: ${{ failure() && steps.cherry-pick-pr.conclusion == 'failure' }}
#        uses: peter-evans/create-or-update-comment@v2
#        with:
#          token: ${{ secrets.BOATSWAIN_GITHUB_TOKEN }}
#          issue-number: ${{ github.event.pull_request.number }}
#          reactions: 'confused'
#          body: ${{ steps.cherry-pick-pr.outputs.error-message }}
